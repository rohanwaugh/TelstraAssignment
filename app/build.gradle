apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {

    dataBinding {
        enabled = true
    }
    compileSdkVersion 29
    buildToolsVersion "29.0.0"
    defaultConfig {
        applicationId "com.android.excercise"
        minSdkVersion 15
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

androidExtensions {
    experimental = true
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${versions.kotlin}"
    implementation "androidx.appcompat:appcompat:${versions.appcompat}"
    implementation "androidx.core:core-ktx:${versions.appcompat}"
    implementation "androidx.constraintlayout:constraintlayout:${versions.constraintlayout}"
    implementation "androidx.lifecycle:lifecycle-extensions:${versions.archLifecycle}"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:${versions.archLifecycle}"
    implementation "com.google.android.material:material:${versions.material}"
    implementation "androidx.legacy:legacy-support-v4:${versions.legacysupport}"

    //Picasso to load network images
    implementation "com.squareup.picasso:picasso:${versions.picasso}"

    //RecyclerView
    implementation "androidx.recyclerview:recyclerview:${versions.recyclerview}"

    //Retrofit for network api calls
    implementation "com.squareup.retrofit2:retrofit:${versions.retrofit}"
    implementation "com.squareup.retrofit2:converter-gson:${versions.retrofit}"

    //Kotlin Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:${versions.kotlinxcoroutines}"
    api "androidx.lifecycle:lifecycle-viewmodel-ktx:${versions.lifecycleviewmodel}"

    //Dagger for dependency injection
    kapt "com.google.dagger:dagger-compiler:${versions.dagger}"
    implementation "com.google.dagger:dagger:${versions.dagger}"

    //Testing
    testImplementation "junit:junit:${versions.junit}"
    androidTestImplementation "com.android.support.test:runner:${versions.testrunner}"
    androidTestImplementation "androidx.test.espresso:espresso-core:${versions.espresso}"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:${versions.espresso}"
    androidTestImplementation "com.android.support.test.espresso:espresso-idling-resource:${versions.espresso}"//3.0.2

    testImplementation "org.mockito:mockito-core:${versions.mockito}"
    testImplementation "org.mockito:mockito-inline:${versions.mockito}"
    androidTestImplementation "org.mockito:mockito-android:${versions.mockito}"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:${versions.mockitokotlin}"

    androidTestImplementation "com.android.support.test:rules:${versions.testrunner}"
    testImplementation "android.arch.core:core-testing:${versions.archcore}"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:${versions.kotlinxcoroutines}"
}
